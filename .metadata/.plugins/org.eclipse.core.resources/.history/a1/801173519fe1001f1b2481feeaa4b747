package com.aahar.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.aahar.dao.LocationsDao;
import com.aahar.dao.UserDao;
import com.aahar.dto.PasswordUpdateDto;
import com.aahar.dto.UpdateUserProfileDto;
import com.aahar.pojos.Location;
import com.aahar.pojos.User;

@Transactional
@Service
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserDao userDao;
	
	@Autowired
	private PasswordEncoder passwordEncoder;
	
	@Autowired
	private LocationsDao locationsDao;

	@Override
	public String updateUserProfile(UpdateUserProfileDto profileDto, String email) {
		User user  = userDao.findByEmail(email).orElseThrow(() -> new RuntimeException("Uer Not Found"));
		
		user.setUsername(profileDto.getUsername());
		user.setPhoneNumber(profileDto.getPhoneNumber());
	
		Location location = locationsDao.findById(user.getLocation().getId()).orElseThrow(() -> new RuntimeException("Location not Found"));
		location.setCity(profileDto.getCity());
		location.setState(profileDto.getState());
		location.setPincode(profileDto.getPincode());
		
		locationsDao.save( location);
		user.getLocation().setId(location.getId());
		userDao.save(user);
		return "User details updated successfully";
	}

	@Override
	public String updateUserPassword(PasswordUpdateDto passwordDto, String email) {
		 User user = userDao.findByEmail(email)
	                .orElseThrow(() -> new RuntimeException("User not found"));
		 
		 if(pa)
		 
		 
		return null;
	}
	
	

}
